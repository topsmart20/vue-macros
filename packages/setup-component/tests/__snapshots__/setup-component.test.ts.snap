// Vitest Snapshot v1

exports[`setup-component > tests/fixtures/async.tsx 1`] = `
"import { defineComponent, withAsyncContext } from 'vue';

var _sfc_main = /* @__PURE__ */ defineComponent({
  __name: \\"0\\",
  props: {
    foo: {
      type: String,
      required: true
    }
  },
  async setup(__props) {
    let __temp, __restore;
    [__temp, __restore] = withAsyncContext(() => globalThis.foo()), await __temp, __restore();
    return () => {
    };
  }
});

var _export_sfc = (sfc, props) => {
  const target = sfc.__vccOpts || sfc;
  for (const [key, val] of props) {
    target[key] = val;
  }
  return target;
};

var setupComponent_0 = /*#__PURE__*/_export_sfc(_sfc_main, [__FILE__]);

const App = setupComponent_0;

export { App };
"
`;

exports[`setup-component > tests/fixtures/basic.ts 1`] = `
"import { defineComponent } from 'vue';

var _sfc_main = /* @__PURE__ */ defineComponent({
  __name: \\"0\\",
  props: {
    foo: { type: String, required: true }
  },
  emits: [\\"change\\"],
  setup(__props) {
    defineOptions({
      name: \\"App\\"
    });
    return () => {
    };
  }
});

var _export_sfc = (sfc, props) => {
  const target = sfc.__vccOpts || sfc;
  for (const [key, val] of props) {
    target[key] = val;
  }
  return target;
};

var setupComponent_0 = /* @__PURE__ */ _export_sfc(_sfc_main, [__FILE__]);

const App = setupComponent_0;

export { App };
"
`;

exports[`setup-component > tests/fixtures/render.tsx 1`] = `
"import { defineComponent, createVNode } from 'vue';

var _sfc_main = /* @__PURE__ */ defineComponent({
  __name: \\"0\\",
  props: {
    foo: {
      type: String,
      required: true
    }
  },
  setup(__props) {
    defineRender(() => createVNode(\\"div\\", null, null));
    return () => {
    };
  }
});

var _export_sfc = (sfc, props) => {
  const target = sfc.__vccOpts || sfc;
  for (const [key, val] of props) {
    target[key] = val;
  }
  return target;
};

var setupComponent_0 = /*#__PURE__*/_export_sfc(_sfc_main, [__FILE__]);

const App = setupComponent_0;

export { App };
"
`;
