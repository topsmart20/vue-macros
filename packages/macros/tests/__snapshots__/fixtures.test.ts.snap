// Vitest Snapshot v1

exports[`fixtures > tests/fixtures/basic.vue 1`] = `
"import { getCurrentInstance, defineComponent } from 'vue';
import { useVModel } from '@vueuse/core';

var _DM_useVModel = (...keys) => {
  const props = getCurrentInstance().proxy.$props;
  const ret = {};
  for (const [key, eventName] of keys)
    ret[key] = useVModel(props, key, undefined, { eventName });
  return ret
};

const name = \\"Foo\\";
const __default__ = defineComponent({
  name
});
var _sfc_main = /* @__PURE__ */ defineComponent({
  ...__default__,
  props: {
    modelValue: { type: String, required: true },
    title: { type: String, required: true }
  },
  emits: [\\"update:modelValue\\", \\"change\\"],
  setup(__props, { emit }) {
    const { title } = __props;
    let { modelValue } = _DM_useVModel([\\"modelValue\\", \\"update:modelValue\\"]);
    const handleClick = () => {
      emit(\\"change\\");
      modelValue.value = \\"hello, \\" + title;
    };
    return () => {
    };
  }
});

var _export_sfc = (sfc, props) => {
  const target = sfc.__vccOpts || sfc;
  for (const [key, val] of props) {
    target[key] = val;
  }
  return target;
};

var basic = /* @__PURE__ */ _export_sfc(_sfc_main, [__FILE__]);

export { basic as default };
"
`;

exports[`fixtures > tests/fixtures/hoist-static.vue 1`] = `
"import { defineComponent } from 'vue';

var _export_sfc = (sfc, props) => {
  const target = sfc.__vccOpts || sfc;
  for (const [key, val] of props) {
    target[key] = val;
  }
  return target;
};

const name = 'App';
const propName = 'title';
const __default__ = defineComponent({
  name,
});
const _sfc_main = /*#__PURE__*/Object.assign(__default__, {
  props: [propName],
  setup(__props) {







return () => {}
}

});
var hoistStatic = /*#__PURE__*/_export_sfc(_sfc_main, [__FILE__]);

export { hoistStatic as default };
"
`;

exports[`fixtures > tests/fixtures/hoist-static-scope.vue 1`] = `
"import { defineComponent, openBlock, createElementBlock } from 'vue';

const [name] = [\\"VarCompName\\"];
const __default__ = defineComponent({
  name
});
var _sfc_main = /* @__PURE__ */ defineComponent({
  ...__default__,
  setup(__props) {
    const test = (name2) => name2;
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock(\\"div\\", null, \\"1\\");
    };
  }
});

var _export_sfc = (sfc, props) => {
  const target = sfc.__vccOpts || sfc;
  for (const [key, val] of props) {
    target[key] = val;
  }
  return target;
};

var hoistStaticScope = /* @__PURE__ */ _export_sfc(_sfc_main, [__FILE__]);

export { hoistStaticScope as default };
"
`;

exports[`fixtures > tests/fixtures/short-emits.setup.tsx 1`] = `
"import { defineComponent } from 'vue';

var _sfc_main = /* @__PURE__ */ defineComponent({
  __name: \\"short-emits.setup\\",
  emits: [\\"update:modelValue\\"],
  setup(__props) {
    return () => {
    };
  }
});

var _export_sfc = (sfc, props) => {
  const target = sfc.__vccOpts || sfc;
  for (const [key, val] of props) {
    target[key] = val;
  }
  return target;
};

var shortEmits_setup = /* @__PURE__ */ _export_sfc(_sfc_main, [__FILE__]);

export { shortEmits_setup as default };
"
`;

exports[`fixtures > tests/fixtures/vue2-model.vue 1`] = `
"import { getCurrentInstance, defineComponent } from 'vue';
import { useVModel } from '@vueuse/core';

var _DM_useVModel = (...keys) => {
  const props = getCurrentInstance().proxy.$props;
  const ret = {};
  for (const [key, eventName] of keys)
    ret[key] = useVModel(props, key, undefined, { eventName });
  return ret
};

const __default__ = defineComponent({
  name: \\"Foo\\",
  model: {
    prop: \\"value\\",
    event: \\"changeInput\\"
  }
});
var _sfc_main = /* @__PURE__ */ defineComponent({
  ...__default__,
  props: {
    modelValue: { type: String, required: true },
    value: { type: String, required: true },
    title: { type: String, required: true }
  },
  emits: [\\"update:modelValue\\", \\"changeInput\\", \\"change\\"],
  setup(__props, { emit }) {
    const { title } = __props;
    let { modelValue, value } = _DM_useVModel([\\"modelValue\\", \\"update:modelValue\\"], [\\"value\\", \\"changeInput\\"]);
    const handleClick = () => {
      emit(\\"change\\");
      modelValue.value = \\"hello, \\" + title;
      value.value = \\"Word,\\" + title;
    };
    return () => {
    };
  }
});

var _export_sfc = (sfc, props) => {
  const target = sfc.__vccOpts || sfc;
  for (const [key, val] of props) {
    target[key] = val;
  }
  return target;
};

var vue2Model = /* @__PURE__ */ _export_sfc(_sfc_main, [__FILE__]);

export { vue2Model as default };
"
`;
